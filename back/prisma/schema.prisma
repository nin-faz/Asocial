generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @unique @default(uuid())
  username  String    @unique
  password  String
  bio       String?
  createdAt DateTime  @default(now())
  iconName  String?   @default("Skull")
  articles  Article[]
  comments  Comment[]
  dislikes  Dislike[]
}

model Dislike {
  id        String   @id @unique @default(uuid())
  userId    String
  articleId String?
  commentId String?
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
  comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Article {
  id        String    @id @unique @default(uuid())
  title     String
  content   String
  authorId  String
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  imageUrl  String?
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments  Comment[]
  dislikes  Dislike[]
}

model Comment {
  id        String    @id @unique @default(uuid())
  content   String
  authorId  String
  articleId String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  article   Article?  @relation(fields: [articleId], references: [id])
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  dislikes  Dislike[]
}
